version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/repo

parameters:
  instance:
    type: integer
    default: 1

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t myapp:latest .
      - run:
          name: Save image to workspace
          command: docker save myapp:latest -o myapp.tar
      - persist_to_workspace:
          root: ~/repo
          paths:
            - myapp.tar

  run-containers:
    executor: docker-executor
    parameters:
      instance:
        type: integer
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo
      - run:
          name: Load image
          command: docker load -i myapp.tar
      - run:
          name: Run 3 containers and auto-stop after 15 min
          no_output_timeout: 20m
          command: |
            echo "üöÄ Instance << parameters.instance >> running 3 containers (hard stop after 15m)"
            
            # ti·∫øn tr√¨nh n·ªÅn t·ª± d·ª´ng Docker sau 900 gi√¢y
            (sleep 900 && echo "‚è∞ Time limit reached, killing all docker containers..." && pkill -f docker) &
            killer_pid=$!

            pids=()
            for i in 1 2 3; do
              echo "Starting container $i"
              docker run --rm myapp:latest > container_${i}.log 2>&1 &
              pids+=($!)
            done

            status=0
            for pid in "${pids[@]}"; do
              wait "$pid" || status=1
            done

            # d·ªçn ti·∫øn tr√¨nh killer n·∫øu job k·∫øt th√∫c s·ªõm
            kill "$killer_pid" 2>/dev/null || true

            echo "‚èπ Containers for instance << parameters.instance >> stopped or killed after 15m"
            exit $status

      - store_artifacts:
          path: .
          destination: logs

workflows:
  version: 2
  build_and_run:
    jobs:
      - build
      - run-containers:
          requires:
            - build
          matrix:
            parameters:
              instance: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
